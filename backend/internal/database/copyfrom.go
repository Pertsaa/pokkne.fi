// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom.go

package database

import (
	"context"
)

// iteratorForBatchCreateSentences implements pgx.CopyFromSource.
type iteratorForBatchCreateSentences struct {
	rows                 []string
	skippedFirstNextCall bool
}

func (r *iteratorForBatchCreateSentences) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBatchCreateSentences) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0],
	}, nil
}

func (r iteratorForBatchCreateSentences) Err() error {
	return nil
}

func (q *Queries) BatchCreateSentences(ctx context.Context, content []string) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"sentence"}, []string{"content"}, &iteratorForBatchCreateSentences{rows: content})
}
